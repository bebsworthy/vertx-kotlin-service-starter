
plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.50"
    id "org.jetbrains.kotlin.kapt" version "1.2.50"
    id "java"
    id "application"
    id "com.github.johnrengelman.shadow" version "2.0.3"
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC7-2"
    id "jacoco"
}

repositories {
    mavenCentral()
    jcenter()
}

def kotlin_version      = "1.2.50"
def vertx_version       = "3.5.1"
def junit5_version      = "5.2.0"

version = '0.0.1'
group = 'demo'
description = 'A sample vertx project'
sourceCompatibility = '1.8'
mainClassName = 'io.vertx.core.Launcher'
def mainVerticleName = 'paths.MainVerticle'
def config = "src/main/resources/application-conf.json"

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // compile "io.vertx:vertx-lang-js:$vertx_version"  // generate javascript proxy for services
    compile "io.vertx:vertx-lang-kotlin:$vertx_version"
    compile "io.vertx:vertx-lang-kotlin-coroutines:$vertx_version"

    compile "io.vertx:vertx-web:$vertx_version"
    compile "io.vertx:vertx-auth-jwt:$vertx_version"
    compile "io.vertx:vertx-web-api-contract:$vertx_version"
    compile "io.vertx:vertx-config:$vertx_version"
    compile "io.vertx:vertx-config-yaml:$vertx_version"
    compile "io.vertx:vertx-service-discovery:$vertx_version"
    compile "io.vertx:vertx-service-proxy:$vertx_version"
    compile "io.vertx:vertx-shell:$vertx_version"

    // Annotation processor for Vertx Proxy
    compile "io.vertx:vertx-codegen:$vertx_version:processor"
    kapt "io.vertx:vertx-codegen:$vertx_version:processor"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"

    // Junit 5 testing
    testCompile "io.vertx:vertx-junit5:$vertx_version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

// Redeploy watcher.
run {
    args = ['run', mainVerticleName,
            "--help",
            "--launcher-class=$mainClassName",
            "--conf=$config",
            "--redeploy=src/**/*.*",
            "--on-redeploy=./gradlew classes"
    ]
}

shadowJar {
    //classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': "$mainVerticleName"
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

kapt {

}

compileJava {
    targetCompatibility = 1.8
    sourceCompatibility = 1.8
}

sourceSets {
    main.kotlin.srcDirs = ['src/main']
    main.java.srcDirs = ['src/main', 'src/generated']

    test.kotlin.srcDirs = ['src/test']
    test.java.srcDirs = ['src/test']
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

detekt {
    version = "1.0.0.RC7-2"
    defaultProfile {
        input = file("src/main")
        filters = ".*/resources/.*,.*/build/.*"
    }
}

jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/reports/jacoco")
}